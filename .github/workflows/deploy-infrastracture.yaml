name: infrastracture

on:
  push:
    branches:
      - "develop"
    paths-ignore:
      - '*.md'
      - '.github/**'
  workflow_dispatch:
    inputs:
      is_public:
        description: 'Decide whether to publish ingresses publicly or not.'
        required: true
        default: true
      is_encrypted:
        description: 'Decide whether to manage the site in SSL or not.'
        required: true
        default: true

env:
  TF_FOLDER: "hello-world/live"
  BACKEND_ENDPOINT: "https://fra1.digitaloceanspaces.com"
  BACKEND_KEY: "workshop/live/terraform.tfstate"
  BACKEND_BUCKET: "workshoptfstate"
  BACKEND_REGION: "eu-central-1"
  BACKEND_ACCESS_KEY: ${{ secrets.DIGITALOCEAN_SPACE_ACCESS_KEY }}
  BACKEND_SECRET_KEY: ${{ secrets.DIGITALOCEAN_SPACE_SECRET_KEY }}
  TF_VAR_do_token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN}}
  TF_VAR_ovh_application_key: ${{ secrets.OVH_APPLICATION_KEY }}
  TF_VAR_ovh_application_secret: ${{ secrets.OVH_APPLICATION_SECRET }}
  TF_VAR_ovh_consumer_key: ${{ secrets.OVH_CONSUMER_KEY }}
  TF_VAR_is_public: ${{ github.event.inputs.is_public }}
  TF_VAR_is_encrypted: ${{ github.event.inputs.is_encrypted }}

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - name: "GIT checkout"
        uses: actions/checkout@v3

      - name: TERRAFORM init
        working-directory: ${{ env.TF_FOLDER }}
        run: |
          terraform init -backend-config="endpoint=$BACKEND_ENDPOINT" \
            -backend-config="key=$BACKEND_KEY" \
            -backend-config="bucket=$BACKEND_BUCKET" \
            -backend-config="region=$BACKEND_REGION" \
            -backend-config="access_key=$BACKEND_ACCESS_KEY" \
            -backend-config="secret_key=$BACKEND_SECRET_KEY" \
            -backend-config="skip_credentials_validation=true" \
            -backend-config="skip_metadata_api_check=true"

      - name: TERRAFORM validate
        working-directory: ${{ env.TF_FOLDER }}
        run: |
          terraform validate
      
      - name: TERRAFORM plan
        working-directory: ${{ env.TF_FOLDER }}
        run: |
          terraform plan
      
  approve:
    runs-on: ubuntu-latest
    needs:
      - plan
    steps:
      - uses: trstringer/manual-approval@v1
        timeout-minutes: 60
        with:
          secret: ${{ github.TOKEN }}
          approvers: supertrampr
          minimum-approvals: 1
          issue-title: "Check terraform plan generated by github action and decide whether to approve or cancel."
  
  apply:
    runs-on: ubuntu-latest
    needs: 
      - approve
    steps:
      - name: "GIT checkout"
        uses: actions/checkout@v3

      - name: TERRAFORM init
        working-directory: ${{ env.TF_FOLDER }}
        run: |
          terraform init -backend-config="endpoint=$BACKEND_ENDPOINT" \
            -backend-config="key=$BACKEND_KEY" \
            -backend-config="bucket=$BACKEND_BUCKET" \
            -backend-config="region=$BACKEND_REGION" \
            -backend-config="access_key=$BACKEND_ACCESS_KEY" \
            -backend-config="secret_key=$BACKEND_SECRET_KEY" \
            -backend-config="skip_credentials_validation=true" \
            -backend-config="skip_metadata_api_check=true"

      - name: TERRAFORM apply
        working-directory: ${{ env.TF_FOLDER }}
        run: |
          terraform apply -auto-approve

  run-application-workflow:
    runs-on: ubuntu-latest
    needs: 
      - apply
    steps:
      - name: "CALL sample-fe-app workflow"
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/supertrampr/sample-fe-app/actions/workflows/sample-fe-app.yaml/dispatches \
            -d '{"ref":"${{ github.ref_name }}"}'